{"ast":null,"code":"var _jsxFileName = \"/Users/shrutidalvirosen/my-web-app/src/components/IngredientInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientInput = ({\n  onAddIngredient,\n  availableIngredients\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const inputRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  useEffect(() => {\n    if (inputValue.trim()) {\n      const filtered = availableIngredients.filter(ingredient => ingredient.toLowerCase().includes(inputValue.toLowerCase())).slice(0, 10);\n      setSuggestions(filtered);\n      setShowSuggestions(filtered.length > 0);\n      setSelectedIndex(-1);\n    } else {\n      setSuggestions([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, availableIngredients]);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      setSelectedIndex(prev => prev < suggestions.length - 1 ? prev + 1 : prev);\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      if (selectedIndex >= 0 && suggestions[selectedIndex]) {\n        handleSelectIngredient(suggestions[selectedIndex]);\n      } else if (inputValue.trim()) {\n        handleSelectIngredient(inputValue.trim());\n      }\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n      setSelectedIndex(-1);\n    }\n  };\n  const handleSelectIngredient = ingredient => {\n    var _inputRef$current;\n    onAddIngredient(ingredient);\n    setInputValue('');\n    setShowSuggestions(false);\n    setSelectedIndex(-1);\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n  const handleClickOutside = e => {\n    if (suggestionsRef.current && !suggestionsRef.current.contains(e.target)) {\n      setShowSuggestions(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown,\n      placeholder: \"Type an ingredient...\",\n      className: \"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: suggestionsRef,\n      className: \"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto\",\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `px-4 py-2 cursor-pointer hover:bg-gray-100 ${index === selectedIndex ? 'bg-blue-100' : ''}`,\n        onClick: () => handleSelectIngredient(suggestion),\n        children: suggestion\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientInput, \"APjD6wkguGvf9+Bi5EXQ4tAz2i4=\");\n_c = IngredientInput;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","IngredientInput","onAddIngredient","availableIngredients","_s","inputValue","setInputValue","suggestions","setSuggestions","showSuggestions","setShowSuggestions","selectedIndex","setSelectedIndex","inputRef","suggestionsRef","trim","filtered","filter","ingredient","toLowerCase","includes","slice","length","handleInputChange","e","target","value","handleKeyDown","key","preventDefault","prev","handleSelectIngredient","_inputRef$current","current","focus","handleClickOutside","contains","document","addEventListener","removeEventListener","className","children","ref","type","onChange","onKeyDown","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","index","onClick","_c","$RefreshReg$"],"sources":["/Users/shrutidalvirosen/my-web-app/src/components/IngredientInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\ninterface IngredientInputProps {\n  onAddIngredient: (ingredient: string) => void;\n  availableIngredients: string[];\n}\n\nconst IngredientInput: React.FC<IngredientInputProps> = ({ onAddIngredient, availableIngredients }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const suggestionsRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (inputValue.trim()) {\n      const filtered = availableIngredients.filter(ingredient =>\n        ingredient.toLowerCase().includes(inputValue.toLowerCase())\n      ).slice(0, 10);\n      setSuggestions(filtered);\n      setShowSuggestions(filtered.length > 0);\n      setSelectedIndex(-1);\n    } else {\n      setSuggestions([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, availableIngredients]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      setSelectedIndex(prev => \n        prev < suggestions.length - 1 ? prev + 1 : prev\n      );\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      if (selectedIndex >= 0 && suggestions[selectedIndex]) {\n        handleSelectIngredient(suggestions[selectedIndex]);\n      } else if (inputValue.trim()) {\n        handleSelectIngredient(inputValue.trim());\n      }\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n      setSelectedIndex(-1);\n    }\n  };\n\n  const handleSelectIngredient = (ingredient: string) => {\n    onAddIngredient(ingredient);\n    setInputValue('');\n    setShowSuggestions(false);\n    setSelectedIndex(-1);\n    inputRef.current?.focus();\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    if (suggestionsRef.current && !suggestionsRef.current.contains(e.target as Node)) {\n      setShowSuggestions(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  return (\n    <div className=\"relative\">\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Type an ingredient...\"\n        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n      />\n      \n      {showSuggestions && (\n        <div\n          ref={suggestionsRef}\n          className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto\"\n        >\n          {suggestions.map((suggestion, index) => (\n            <div\n              key={suggestion}\n              className={`px-4 py-2 cursor-pointer hover:bg-gray-100 ${\n                index === selectedIndex ? 'bg-blue-100' : ''\n              }`}\n              onClick={() => handleSelectIngredient(suggestion)}\n            >\n              {suggestion}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default IngredientInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}