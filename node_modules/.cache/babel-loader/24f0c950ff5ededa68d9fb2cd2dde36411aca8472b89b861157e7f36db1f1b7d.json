{"ast":null,"code":"const BASE_URL = 'https://www.thecocktaildb.com/api/json/v1/1';\nexport const fetchIngredients = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/list.php?i=list`);\n    const data = await response.json();\n    if (data.drinks) {\n      return data.drinks.map(drink => drink.strIngredient1);\n    }\n    return [];\n  } catch (error) {\n    console.error('Error fetching ingredients:', error);\n    return [];\n  }\n};\nexport const searchCocktailsByIngredient = async ingredient => {\n  try {\n    const response = await fetch(`${BASE_URL}/filter.php?i=${encodeURIComponent(ingredient)}`);\n    const data = await response.json();\n    return data.drinks || [];\n  } catch (error) {\n    console.error('Error searching cocktails by ingredient:', error);\n    return [];\n  }\n};\nexport const getCocktailDetails = async id => {\n  try {\n    const response = await fetch(`${BASE_URL}/lookup.php?i=${id}`);\n    const data = await response.json();\n    return data.drinks ? data.drinks[0] : null;\n  } catch (error) {\n    console.error('Error fetching cocktail details:', error);\n    return null;\n  }\n};\nexport const getIngredientsFromCocktail = cocktail => {\n  const ingredients = [];\n  for (let i = 1; i <= 15; i++) {\n    const ingredient = cocktail[`strIngredient${i}`];\n    if (ingredient && ingredient.trim()) {\n      ingredients.push(ingredient.trim());\n    }\n  }\n  return ingredients;\n};\nexport const calculateMatchPercentage = (userIngredients, cocktailIngredients) => {\n  if (cocktailIngredients.length === 0) return 0;\n  const userIngredientsLower = userIngredients.map(ing => ing.toLowerCase());\n  const cocktailIngredientsLower = cocktailIngredients.map(ing => ing.toLowerCase());\n  const matchingIngredients = cocktailIngredientsLower.filter(ingredient => userIngredientsLower.some(userIng => userIng.includes(ingredient) || ingredient.includes(userIng)));\n  return matchingIngredients.length / cocktailIngredients.length * 100;\n};","map":{"version":3,"names":["BASE_URL","fetchIngredients","response","fetch","data","json","drinks","map","drink","strIngredient1","error","console","searchCocktailsByIngredient","ingredient","encodeURIComponent","getCocktailDetails","id","getIngredientsFromCocktail","cocktail","ingredients","i","trim","push","calculateMatchPercentage","userIngredients","cocktailIngredients","length","userIngredientsLower","ing","toLowerCase","cocktailIngredientsLower","matchingIngredients","filter","some","userIng","includes"],"sources":["/Users/shrutidalvirosen/my-web-app/src/utils/api.ts"],"sourcesContent":["import { Cocktail, CocktailListItem, Ingredient, CocktailDBResponse } from '../types';\n\nconst BASE_URL = 'https://www.thecocktaildb.com/api/json/v1/1';\n\nexport const fetchIngredients = async (): Promise<string[]> => {\n  try {\n    const response = await fetch(`${BASE_URL}/list.php?i=list`);\n    const data: CocktailDBResponse<Ingredient> = await response.json();\n    \n    if (data.drinks) {\n      return data.drinks.map(drink => drink.strIngredient1);\n    }\n    return [];\n  } catch (error) {\n    console.error('Error fetching ingredients:', error);\n    return [];\n  }\n};\n\nexport const searchCocktailsByIngredient = async (ingredient: string): Promise<CocktailListItem[]> => {\n  try {\n    const response = await fetch(`${BASE_URL}/filter.php?i=${encodeURIComponent(ingredient)}`);\n    const data: CocktailDBResponse<CocktailListItem> = await response.json();\n    \n    return data.drinks || [];\n  } catch (error) {\n    console.error('Error searching cocktails by ingredient:', error);\n    return [];\n  }\n};\n\nexport const getCocktailDetails = async (id: string): Promise<Cocktail | null> => {\n  try {\n    const response = await fetch(`${BASE_URL}/lookup.php?i=${id}`);\n    const data: CocktailDBResponse<Cocktail> = await response.json();\n    \n    return data.drinks ? data.drinks[0] : null;\n  } catch (error) {\n    console.error('Error fetching cocktail details:', error);\n    return null;\n  }\n};\n\nexport const getIngredientsFromCocktail = (cocktail: Cocktail): string[] => {\n  const ingredients: string[] = [];\n  \n  for (let i = 1; i <= 15; i++) {\n    const ingredient = cocktail[`strIngredient${i}` as keyof Cocktail] as string;\n    if (ingredient && ingredient.trim()) {\n      ingredients.push(ingredient.trim());\n    }\n  }\n  \n  return ingredients;\n};\n\nexport const calculateMatchPercentage = (userIngredients: string[], cocktailIngredients: string[]): number => {\n  if (cocktailIngredients.length === 0) return 0;\n  \n  const userIngredientsLower = userIngredients.map(ing => ing.toLowerCase());\n  const cocktailIngredientsLower = cocktailIngredients.map(ing => ing.toLowerCase());\n  \n  const matchingIngredients = cocktailIngredientsLower.filter(ingredient =>\n    userIngredientsLower.some(userIng => \n      userIng.includes(ingredient) || ingredient.includes(userIng)\n    )\n  );\n  \n  return (matchingIngredients.length / cocktailIngredients.length) * 100;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}